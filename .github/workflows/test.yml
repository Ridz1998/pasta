name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Install UV
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install ${{ matrix.python-version }}

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb x11-utils libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libegl1 libgl1 libglib2.0-0 libdbus-1-3

    - name: Install dependencies
      run: |
        uv sync --all-extras --dev

    - name: Run linting
      run: |
        uv run ruff check .
        uv run ruff format --check .

    - name: Run type checking
      run: |
        uv run mypy src/

    - name: Run tests with coverage (Linux)
      if: runner.os == 'Linux'
      run: |
        xvfb-run -a uv run pytest -v --cov=pasta --cov-report=xml --cov-report=term-missing
      env:
        QT_QPA_PLATFORM: offscreen

    - name: Run tests with coverage (Windows/macOS)
      if: runner.os != 'Linux'
      run: |
        uv run pytest -v --cov=pasta --cov-report=xml --cov-report=term-missing
      env:
        QT_QPA_PLATFORM: offscreen

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests-${{ matrix.os }}-py${{ matrix.python-version }}
        fail_ci_if_error: false
